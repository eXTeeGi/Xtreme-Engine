#ifndef _XtremeSprite
#define _XtremeSprite

#include "AzulCore.h"
using namespace std;

class XtremeSprite
{
public:
	~XtremeSprite();
	XtremeSprite(const XtremeSprite&) = delete;
	XtremeSprite& operator=(const XtremeSprite&) = delete;
	

	XtremeSprite(string key);
	XtremeSprite(string key, Rect* r);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the angle of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <returns>	The angle. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	float GetAngle();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Renders the sprite using the given 2D camera. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="cam">	[in,out] If non-null, the camera. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void Render(Camera* cam);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Renders the sprite using the default 2D camera. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="cam">	[in,out] If non-null, the camera. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void Render();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the angle of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="angle">	The angle. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetAngle(float angle);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the center of rotation of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="x">	The x coordinate. </param>
	/// <param name="y">	The y coordinate. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetCenter(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the position of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="x">	The x coordinate. </param>
	/// <param name="y">	The y coordinate. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetPosition(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the scale by the given factors. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="x">	The x scale factor. </param>
	/// <param name="y">	The y scale factor. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetScaleFactor(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the scale using pixel width and height. </summary>
	///
	/// <remarks>	Jakei, 3/2/2020. </remarks>
	///
	/// <param name="x">	The pixel width. </param>
	/// <param name="y">	The pixel height. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetScalePixel(float x, float y);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Sets the z position of the Sprite, determining </summary>
	///
	/// <remarks>	Jakei, 3/12/2020. </remarks>
	///
	/// <param name="z">	The z coordinate. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetLayer(float z);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the width of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/12/2020. </remarks>
	///
	/// <returns>	The width. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	float getWidth();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the height of the sprite. </summary>
	///
	/// <remarks>	Jakei, 3/12/2020. </remarks>
	///
	/// <returns>	The height. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	float getHeight();

private:
	XtremeSprite() = default;

	void setWorld();

	float angle;
	float centerX;
	float centerY;
	float posZ;
	GraphicsObject_Sprite* pGOSprite;
	float scaleX;
	float scaleY;
	Rect* defRect;
	Rect* re;
};

#endif _XtremeSprite